<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
  <!-- OpenCV cv::Mat -->

  <Type Name="cv::Mat">
    <AlternativeType Name="cv::Mat_&lt;*&gt;"/>
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
  </Type>

  <Type Name="cv::Mat">
    <AlternativeType Name="cv::Mat_&lt;*&gt;"/>
    <DisplayString Condition="(flags&amp;7)==0">{{UINT8, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(flags&amp;7)==1">{{INT8, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(flags&amp;7)==2">{{UINT16, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(flags&amp;7)==3">{{INT16, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(flags&amp;7)==4">{{INT32, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(flags&amp;7)==5">{{FLOAT32, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(flags&amp;7)==6">{{FLOAT64, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(flags&amp;7)==7">{{USER, {((flags&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <Expand>
      <Synthetic Name="[type]" Condition="(flags&amp;7)==0">
        <DisplayString>UINT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(flags&amp;7)==1">
        <DisplayString>INT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(flags&amp;7)==2">
        <DisplayString>UINT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(flags&amp;7)==3">
        <DisplayString>INT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(flags&amp;7)==4">
        <DisplayString>INT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(flags&amp;7)==5">
        <DisplayString>FLOAT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(flags&amp;7)==6">
        <DisplayString>FLOAT64</DisplayString>
      </Synthetic>
      <Item Name="[channels]">((flags&amp;0xfff)&gt;&gt;3)+1</Item>
      <Item Name="[width]">cols</Item>
      <Item Name="[height]">rows</Item>
      <Item Name="[stride]">step.p[0]</Item>
      <Item Name="[continous]">(flags &amp; 16384) == 16384</Item>
      <Item Name="[submatrix]">(flags &amp; 32768) == 32768</Item>
      <Item Name="[data]">data</Item>
      <ArrayItems Condition="data != 0 &amp;&amp; (flags &amp; 7) == 0">
        <Size>cols*rows*(((flags&amp;0xfff)&gt;&gt;3)+1)</Size>
        <ValuePointer>(unsigned __int8*)data</ValuePointer>
      </ArrayItems>
      <ArrayItems Condition="data != 0 &amp;&amp; (flags &amp; 7) == 1">
        <Size>cols*rows*(((flags&amp;0xfff)&gt;&gt;3)+1)</Size>
        <ValuePointer>(__int8*)data</ValuePointer>
      </ArrayItems>
      <ArrayItems Condition="data != 0 &amp;&amp; (flags &amp; 7) == 2">
        <Size>cols*rows*(((flags&amp;0xfff)&gt;&gt;3)+1)</Size>
        <ValuePointer>(unsigned __int16*)data</ValuePointer>
      </ArrayItems>
      <ArrayItems Condition="data != 0 &amp;&amp; (flags &amp; 7) == 3">
        <Size>cols*rows*(((flags&amp;0xfff)&gt;&gt;3)+1)</Size>
        <ValuePointer>(__int16*)data</ValuePointer>
      </ArrayItems>
      <ArrayItems Condition="data != 0 &amp;&amp; (flags &amp; 7) == 4">
        <Size>cols*rows*(((flags&amp;0xfff)&gt;&gt;3)+1)</Size>
        <ValuePointer>(__int32*)data</ValuePointer>
      </ArrayItems>
      <ArrayItems Condition="data != 0 &amp;&amp; (flags &amp; 7) == 5">
        <Size>cols*rows*(((flags&amp;0xfff)&gt;&gt;3)+1)</Size>
        <ValuePointer>(float*)data</ValuePointer>
      </ArrayItems>
      <ArrayItems Condition="data != 0 &amp;&amp; (flags &amp; 7) == 6">
        <Size>cols*rows*(((flags&amp;0xfff)&gt;&gt;3)+1)</Size>
        <ValuePointer>(double*)data</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>

  <!-- OpenCV CvMat -->

  <Type Name="CvMat">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
  </Type>

  <Type Name="CvMat">
    <DisplayString Condition="(type&amp;7)==0">{{UINT8, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(type&amp;7)==1">{{INT8, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(type&amp;7)==2">{{UINT16, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(type&amp;7)==3">{{INT16, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(type&amp;7)==4">{{INT32, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(type&amp;7)==5">{{FLOAT32, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(type&amp;7)==6">{{FLOAT64, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <DisplayString Condition="(type&amp;7)==7">{{USER, {((type&amp;0xfff)&gt;&gt;3)+1} x {cols} x {rows}}}</DisplayString>
    <Expand>
      <Synthetic Name="[type]" Condition="(type&amp;7)==0">
        <DisplayString>UINT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(type&amp;7)==1">
        <DisplayString>INT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(type&amp;7)==2">
        <DisplayString>UINT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(type&amp;7)==3">
        <DisplayString>INT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(type&amp;7)==4">
        <DisplayString>INT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(type&amp;7)==5">
        <DisplayString>FLOAT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="(type&amp;7)==6">
        <DisplayString>FLOAT64</DisplayString>
      </Synthetic>
      <Item Name="[channels]">((type&amp;0xfff)&gt;&gt;3)+1</Item>
      <Item Name="[width]">cols</Item>
      <Item Name="[height]">rows</Item>
      <!-- if step is zero, default to stride = width * nchannels * channelsize -->
      <Item Name="[stride]" Condition="step>0">step</Item>
      <Item Name="[stride]" Condition="step==0">width*(((type&amp;0xfff)&gt;&gt;3)+1)*(1&lt;&lt;((type&amp;7)&gt;&gt;1))</Item>
      <Item Name="[data]">data.ptr</Item>      
    </Expand>
  </Type>

  <!-- OpenCV _IplImage (interleaved data order only) -->

  <Type Name="_IplImage">
    <UIVisualizer ServiceId="{A452AFEA-3DF6-46BB-9177-C0B08F318025}" Id="1" />
  </Type>

  <Type Name="_IplImage">
    <DisplayString Condition="depth==0x08">{{UINT8, {nChannels} x {width} x {height}}}</DisplayString>
    <DisplayString Condition="depth==0x80000008">{{INT8, {nChannels} x {width} x {height}}}</DisplayString>
    <DisplayString Condition="depth==0x10">{{UINT16, {nChannels} x {width} x {height}}}</DisplayString>
    <DisplayString Condition="depth==0x80000010">{{INT16, {nChannels} x {width} x {height}}}</DisplayString>
    <DisplayString Condition="depth==0x80000020">{{INT32, {nChannels} x {width} x {height}}}</DisplayString>
    <DisplayString Condition="depth==0x20">{{FLOAT32, {nChannels} x {width} x {height}}}</DisplayString>
    <DisplayString Condition="depth==0x40">{{FLOAT64, {nChannels} x {width} x {height}}}</DisplayString>
    <Expand>
      <Synthetic Name="[type]" Condition="depth==0x08">
        <DisplayString>UINT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="depth==0x80000008">
        <DisplayString>INT8</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="depth==0x10">
        <DisplayString>UINT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="depth==0x80000010">
        <DisplayString>INT16</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="depth==0x80000020">
        <DisplayString>INT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="depth==0x20">
        <DisplayString>FLOAT32</DisplayString>
      </Synthetic>
      <Synthetic Name="[type]" Condition="depth==0x40">
        <DisplayString>FLOAT64</DisplayString>
      </Synthetic>
      <Item Name="[channels]">nChannels</Item>
      <Item Name="[width]">width</Item>
      <Item Name="[height]">height</Item>
      <Item Name="[stride]">widthStep</Item>
      <Item Name="[data]">imageData</Item>
    </Expand>
  </Type>

  <Type Name="cv::Point_&lt;*&gt;">
    <DisplayString>({x},{y})</DisplayString>
  </Type>
  <Type Name="cv::Point3_&lt;*&gt;">
    <DisplayString>({x},{y},{z})</DisplayString>
  </Type>
  <Type Name="cv::Size_&lt;*&gt;">
    <DisplayString>{width}×{height}</DisplayString>
    <Expand>
      <Item Condition="width >= 0 &amp;&amp; height >= 0" Name="[area]">width * height</Item>
    </Expand>
  </Type>
  <Type Name="cv::Range">
    <DisplayString Condition="start == end">empty</DisplayString>
    <DisplayString Condition="start != end">[start,end)</DisplayString>
    <Expand>
      <Item Name="[size]">end - start</Item>
    </Expand>
  </Type>
  <Type Name="cv::RotatedRect">
    <DisplayString>center={center} size={size} angle={angle}°</DisplayString>
  </Type>
  <Type Name="cv::Rect_&lt;*&gt;">
    <DisplayString>({x},{y},{x + width},{y + height}) [{width}×{height}]</DisplayString>
    <Expand>
      <Item Name="[area]">width * height</Item>
    </Expand>
  </Type>
  <Type Name="cv::Scalar_&lt;*&gt;">
    <Expand>
      <ArrayItems>
        <Size>4</Size>
        <ValuePointer>val</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="cv::Vec&lt;*,*&gt;">
    <Expand>
      <ArrayItems>
        <Size>$T2</Size>
        <ValuePointer>val</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="cv::Matx&lt;*,*,*&gt;">
    <DisplayString>{{size = {$T2}×{$T3}}}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>$T2 * $T3</Size>
        <ValuePointer>val</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="cv::Ptr&lt;*&gt;">
    <DisplayString Condition="obj == 0">empty</DisplayString>
    <DisplayString Condition="obj != 0 &amp;&amp; *refcount == 1">Ptr {*obj} [{*refcount} ref]</DisplayString>
    <DisplayString Condition="obj != 0 &amp;&amp; *refcount != 1">Ptr {*obj} [{*refcount} refs]</DisplayString>
    <Expand>
      <Item Name="[ptr]" Condition="obj != 0">obj</Item>
    </Expand>
  </Type>
  <Type Name="cv::AutoBuffer&lt;*,*&gt;">
    <DisplayString>{{size = {size}}}</DisplayString>
    <Expand>
      <ArrayItems>
        <Size>size</Size>
        <ValuePointer>ptr</ValuePointer>
      </ArrayItems>
    </Expand>
  </Type>
  <Type Name="cv::Complex&lt;*&gt;">
    <!--pure real-->
    <DisplayString Condition="im == 0">{re}</DisplayString>
    <!--pure imaginary-->
    <DisplayString Condition="(re == 0) &amp;&amp; (im &lt; 0)">-i*{-im}</DisplayString>
    <DisplayString Condition="(re == 0) &amp;&amp; (im &gt;= 0)">i*{im}</DisplayString>
    <!--mixed-->
    <DisplayString Condition="im &lt; 0">{re}-i*{-im}</DisplayString>
    <DisplayString>{re}+i*{im}</DisplayString>
    <Expand>
      <Item Name="real">re</Item>
      <Item Name="imag">im</Item>
    </Expand>
  </Type>
  <Type Name="cv::Exception">
    <DisplayString>msg</DisplayString>
  </Type>
  <Type Name="cv::MatConstIterator_&lt;*&gt;">
    <AlternativeType Name="cv::MatIterator_&lt;*&gt;" />
    <DisplayString Condition="m->dims == 2 &amp;&amp; ptr == m->data + m->cols * m->rows * m->step.p[m->dims - 1]">{*(($T1*)ptr)}</DisplayString>
    <DisplayString Condition="!(m->dims == 2 &amp;&amp; ptr == m->data + m->cols * m->rows * m->step.p[m->dims - 1])">end</DisplayString>
    <Expand>
      <Item Name="[ptr]">($T1*)ptr</Item>
    </Expand>
  </Type>
  <Type Name="cv::MatConstIterator">
    <DisplayString Condition="m->dims == 2 &amp;&amp; ptr == m->data + m->cols * m->rows * m->step.p[m->dims - 1]">{*ptr}</DisplayString>
    <DisplayString Condition="!(m->dims == 2 &amp;&amp; ptr == m->data + m->cols * m->rows * m->step.p[m->dims - 1])">end</DisplayString>
    <Expand>
      <Item Name="[ptr]">ptr</Item>
    </Expand>
  </Type>
  <!--TODO: SparseMat-->
</AutoVisualizer>
